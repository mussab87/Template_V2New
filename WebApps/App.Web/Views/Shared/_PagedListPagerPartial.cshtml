@model PaginatedResultBase

<div class="pagination-container d-flex justify-content-between align-items-center flex-wrap">
    <div class="pagination-buttons">
        <!-- Last Page -->
        <a href="@Url.Action(ViewData["action"] as string, new { page = 1, searchString = Model.SearchString, pageSize = Model.PageSize })"
           class="btn btn-sm btn-light-success">
            <i class="ki ki-bold-double-arrow-next icon-xs"></i>
        </a>

        <!-- Next Page -->
        <a href="@Url.Action(ViewData["action"] as string, new { page = Model.PageNumber > 1 ? Model.PageNumber - 1 : 1, searchString = Model.SearchString, pageSize = Model.PageSize })"
           class="btn btn-sm btn-light-success">
            <i class="ki ki-bold-arrow-next icon-xs"></i>
        </a>


        <!-- Page Numbers -->
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <a href="@Url.Action(ViewData["action"] as string, new { page = i, searchString = Model.SearchString, pageSize = Model.PageSize })"
               class="btn btn-sm btn-hover-success @(Model.PageNumber == i ? "active" : "")">
                @i
            </a>
        }

        <!-- Previous Page -->
        <a href="@Url.Action(ViewData["action"] as string, new { page = Model.PageNumber < Model.TotalPages ? Model.PageNumber + 1 : Model.TotalPages, searchString = Model.SearchString, pageSize = Model.PageSize })"
           class="btn btn-sm btn-light-success">
            <i class="ki ki-bold-arrow-back icon-xs"></i>
        </a>

        <!-- First Page -->
        <a href="@Url.Action(ViewData["action"] as string, new { page = Model.TotalPages, searchString = Model.SearchString, pageSize = Model.PageSize })"
           class="btn btn-sm btn-light-success">
            <i class="ki ki-bold-double-arrow-back icon-xs"></i>
        </a>

    </div>

    <div class="pagination-info">
        <span class="text-muted">
            عرض @Model.PageSize من @Model.TotalCount سجل
        </span>
    </div>
</div>
